services:
  # Node.js Application Service
  app:
    image: ghcr.io/nmdra/finapi:latest
    container_name: finance-api
    ports:
      - "5000:5000"
    command: node server.js
    environment:
      - PORT=5000
      - NODE_ENV=production
      - API_VERSION=v1
      - JWT_SECRET=${JWT_SECRET}
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY}
      - BASE_CURRENCY=${BASE_CURRENCY}
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - CONFIG_FILE_PATH=${CONFIG_FILE_PATH}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_AUTH_USER=${EMAIL_AUTH_USER}
      - EMAIL_AUTH_PASS=${EMAIL_AUTH_PASS}
      - FRONTEND_URL=${FRONTEND_URL}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:5000/api/v1/health"]
    depends_on:
      - db
      - redis
    networks:
      - finance-network

  # MongoDB Database Service
  db:
    image: mongo
    container_name: finance-db
    restart: on-failure
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/data/db
    networks:
      - finance-network
    depends_on:
      - db
      - redis

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: finance-redis
    restart: on-failure
    depends_on:
      - db
    volumes:
      - redis_data:/data
    networks:
      - finance-network

networks:
  finance-network:
    driver: bridge

volumes:
  db-data:
  redis_data:

