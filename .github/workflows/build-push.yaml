name: Build and Publish Docker Image

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    tags:
      - 'v*.*.*'
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  build-and-push:
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub (or GHCR if you prefer)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}  # Docker Hub username (use GitHub actor if using GHCR)
            password: ${{ secrets.GITHUB_TOKEN }}  # Docker Hub password (use GitHub token if using GHCR)

      - name: Set Git Tag or Commit SHA
        run: |
            if [[ "$GITHUB_REF" =~ refs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
                echo "GIT_TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
            else
                calculatedSha=$(git rev-parse --short ${{ github.sha }})
                echo "GIT_TAG=$calculatedSha" >> $GITHUB_ENV
            fi

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          target: production
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/finapi:${{ env.COMMIT_SHORT_SHA }},ghcr.io/${{ github.repository_owner }}/finapi:${{ env.GIT_TAG }},  
          cache-from: type=gha
          cache-to: type=gha,mode=max     
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'ghcr.io/${{ github.repository_owner }}/finapi:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'